Accurate and efficient GPU ray-casting algorithm for volume rendering of 
unstructured grid data by Gibeom Gu, Duksu Kim

Image space = 2D perspective projection into the regular grid of pixels
The MOC equivalent of image space is the 1D line of the horizon in the viewpoint of the ray.
Now the parallel rays are effectively just bins in the new x-axis, so

Adapted to MOC:
  For azimuthal angle:
    For edge in mesh:
      Project edge to the viewpoint of the ray.
      Determine ray ID and depth of intersection. 
      Add {ray ID, edge ID, depth} to the list of intersections.
    Sort the list of intersections by ray ID, then by depth.

We now have a list of intersections sorted by ray ID, then by depth, so we can just walk through
the list in order for each ray.
The only problem is that rays can vary dramatically in their number of intersected edges.
Therefore, we should chain the reflected angle (at least one). This will even out the arc length
of the ray to be exactly the same, which is the best we can hope for.
