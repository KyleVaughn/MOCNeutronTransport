#pragma once

#include <cassert> // assert
#include <cstdint> // int32_t, int64_t

// OpenMP
#cmakedefine01 UM2_ENABLE_OPENMP

// CUDA
#cmakedefine01 UM2_ENABLE_CUDA
#if UM2_ENABLE_CUDA
#  define UM2_HOST    __host__
#  define UM2_DEVICE  __device__
#  define UM2_HOSTDEV __host__ __device__
#  define UM2_GLOBAL  __global__
#else
#  define UM2_HOST
#  define UM2_DEVICE
#  define UM2_HOSTDEV
#  define UM2_GLOBAL
#endif

// spdlog
#define SPDLOG_ACTIVE_LEVEL @UM2_SPDLOG_LEVEL@

// Attributes
// -----------------------------------------------------------------------------
// These are supported by GCC and Clang
#define UM2_PURE  [[gnu::pure]]
#define UM2_CONST [[gnu::const]]
#define UM2_HOT   [[gnu::hot]]

// Define a PURE/CONST attribute that depends on a release build to be enabled
#if defined(NDEBUG)
#  define UM2_NDEBUG_PURE  UM2_PURE
#  define UM2_NDEBUG_CONST UM2_CONST
#else
#  define UM2_NDEBUG_PURE
#  define UM2_NDEBUG_CONST
#endif

// Typedefs
// -----------------------------------------------------------------------------
#cmakedefine01 UM2_ENABLE_INT64
#if UM2_ENABLE_INT64
using len_t = int64_t;
#else
using len_t = int32_t;
#endif
