@testset "Interpolation" begin
    @testset "LineSegment" begin
        for T in [Float32, Float64, BigFloat]
            p‚ÇÅ = Point3D{T}(1, 1, 1)
            p‚ÇÇ = Point3D{T}(3, 3, 3)
            l = LineSegment(p‚ÇÅ, p‚ÇÇ)
            @test l(0) ‚âà p‚ÇÅ
            @test l(1) ‚âà p‚ÇÇ
            @test l(1//2) ‚âà Point3D{T}(2, 2, 2)
        end
    end

    @testset "QuadraticSegment" begin
        for T in [Float32, Float64, BigFloat]
            ùòÖ‚ÇÅ = Point3D{T}(0, 0, 0)
            ùòÖ‚ÇÇ = Point3D{T}(2, 0, 0)
            ùòÖ‚ÇÉ = Point3D{T}(1, 1, 0)
            q = QuadraticSegment(ùòÖ‚ÇÅ, ùòÖ‚ÇÇ, ùòÖ‚ÇÉ)
            for r = LinRange{T}(0, 1, 5)
                @test q(r) ‚âà Point3D{T}(2r, -(2r)^2 + 4r, 0)
            end
        end
    end

    @testset "Triangle" begin
        for T in [Float32, Float64, BigFloat]
            p‚ÇÅ = Point3D{T}(0, 0, 0)
            p‚ÇÇ = Point3D{T}(0, 1, 0)
            p‚ÇÉ = Point3D{T}(0, 0, 1)
            tri = Triangle(p‚ÇÅ, p‚ÇÇ, p‚ÇÉ)
            @test tri(0, 0) ‚âà p‚ÇÅ
            @test tri(1, 0) ‚âà p‚ÇÇ
            @test tri(0, 1) ‚âà p‚ÇÉ
            @test tri(1//2, 1//2) ‚âà Point3D{T}(0, 1//2, 1//2)
        end
    end

    @testset "Quadrilateral" begin
        for T in [Float32, Float64, BigFloat]
            p‚ÇÅ = Point3D{T}(0, 0, 0)
            p‚ÇÇ = Point3D{T}(0, 1, 0)
            p‚ÇÉ = Point3D{T}(0, 1, 1)
            p‚ÇÑ = Point3D{T}(0, 0, 1)
            quad = Quadrilateral(p‚ÇÅ, p‚ÇÇ, p‚ÇÉ, p‚ÇÑ)
            @test quad(0, 0) ‚âà p‚ÇÅ
            @test quad(1, 0) ‚âà p‚ÇÇ
            @test quad(1, 1) ‚âà p‚ÇÉ
            @test quad(0, 1) ‚âà p‚ÇÑ
            @test quad(1//2, 1//2) ‚âà Point3D{T}(0, 1//2, 1//2)
        end
    end

    @testset "QuadraticTriangle" begin
        for T in [Float32, Float64, BigFloat]
            p‚ÇÅ = Point3D{T}(0, 0, 0)
            p‚ÇÇ = Point3D{T}(0, 1, 0)
            p‚ÇÉ = Point3D{T}(0, 1, 1)
            p‚ÇÑ = Point3D{T}(0, 1//2, 0)
            p‚ÇÖ = Point3D{T}(0, 1, 1//2)
            p‚ÇÜ = Point3D{T}(0, 1//2, 1//2)
            tri6 = QuadraticTriangle(p‚ÇÅ, p‚ÇÇ, p‚ÇÉ, p‚ÇÑ, p‚ÇÖ, p‚ÇÜ)
            @test tri6(0, 0) ‚âà p‚ÇÅ
            @test tri6(1, 0) ‚âà p‚ÇÇ
            @test tri6(0, 1) ‚âà p‚ÇÉ
            @test tri6(1//2, 0) ‚âà p‚ÇÑ
            @test tri6(1//2, 1//2) ‚âà p‚ÇÖ
            @test tri6(0, 1//2) ‚âà p‚ÇÜ
        end
    end

    @testset "QuadraticQuadrilateral" begin
        for T in [Float32, Float64, BigFloat]
            p‚ÇÅ = Point3D{T}(0, 0, 0)
            p‚ÇÇ = Point3D{T}(0, 1, 0)
            p‚ÇÉ = Point3D{T}(0, 1, 1)
            p‚ÇÑ = Point3D{T}(0, 0, 1)
            p‚ÇÖ = Point3D{T}(0, 1//2,    0)
            p‚ÇÜ = Point3D{T}(0,    1, 1//2)
            p‚Çá = Point3D{T}(0, 1//2,    1)
            p‚Çà = Point3D{T}(0,    0, 1//2)
            quad8 = QuadraticQuadrilateral(p‚ÇÅ, p‚ÇÇ, p‚ÇÉ, p‚ÇÑ, p‚ÇÖ, p‚ÇÜ, p‚Çá, p‚Çà)
            @test quad8(0, 0) ‚âà p‚ÇÅ
            @test quad8(1, 0) ‚âà p‚ÇÇ
            @test quad8(1, 1) ‚âà p‚ÇÉ
            @test quad8(0, 1) ‚âà p‚ÇÑ
            @test quad8(1//2,    0) ‚âà p‚ÇÖ
            @test quad8(   1, 1//2) ‚âà p‚ÇÜ
            @test quad8(1//2,    1) ‚âà p‚Çá
            @test quad8(   0, 1//2) ‚âà p‚Çà
            @test quad8(1//2, 1//2) ‚âà Point3D{T}(0, 1//2, 1//2)
        end
    end

    @testset "Tetrahedron" begin
        for T in [Float32, Float64, BigFloat]
            p‚ÇÅ = Point3D{T}(0, 0, 0)           
            p‚ÇÇ = Point3D{T}(1, 0, 0)
            p‚ÇÉ = Point3D{T}(0, 1, 0)
            p‚ÇÑ = Point3D{T}(0, 0, 1)
            tet = Tetrahedron(p‚ÇÅ, p‚ÇÇ, p‚ÇÉ, p‚ÇÑ)
            @test tet(0, 0, 0) ‚âà p‚ÇÅ
            @test tet(1, 0, 0) ‚âà p‚ÇÇ
            @test tet(0, 1, 0) ‚âà p‚ÇÉ
            @test tet(0, 0, 1) ‚âà p‚ÇÑ
        end
    end

    @testset "Hexahedron" begin
        for T in [Float32, Float64, BigFloat]
            p‚ÇÅ = Point3D{T}(0, 0, 0)
            p‚ÇÇ = Point3D{T}(1, 0, 0)
            p‚ÇÉ = Point3D{T}(0, 1, 0)
            p‚ÇÑ = Point3D{T}(1, 1, 0)
            p‚ÇÖ = Point3D{T}(0, 0, 1)
            p‚ÇÜ = Point3D{T}(1, 0, 1)
            p‚Çá = Point3D{T}(0, 1, 1)
            p‚Çà = Point3D{T}(1, 1, 1)
            hex = Hexahedron(p‚ÇÅ, p‚ÇÇ, p‚ÇÉ, p‚ÇÑ, p‚ÇÖ, p‚ÇÜ, p‚Çá, p‚Çà)
            @test hex(0, 0, 0) ‚âà p‚ÇÅ
            @test hex(1, 0, 0) ‚âà p‚ÇÇ
            @test hex(1, 1, 0) ‚âà p‚ÇÉ
            @test hex(0, 1, 0) ‚âà p‚ÇÑ
            @test hex(0, 0, 1) ‚âà p‚ÇÖ
            @test hex(1, 0, 1) ‚âà p‚ÇÜ
            @test hex(1, 1, 1) ‚âà p‚Çá
            @test hex(0, 1, 1) ‚âà p‚Çà
        end
    end






end
